{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReverse","visibleGoods","goods","praparedGoods","sort","good1","good2","length","abc","localeCompare","reverse","getPreparedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,qBAAAA,E,iBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAmCF,oBAAS,GAA5C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAhCR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EAASc,OACZ,OAAOF,EAAME,OAASD,EAAMC,OAE9B,KAAKd,EAASe,IACZ,OAAOH,EAAMI,cAAcH,GAE7B,QACE,OAAO,MAKXP,GACFI,EAAcO,UAGTP,EAMcQ,CAAiBjB,EAAiBG,EAAWE,GAOlE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAaL,EAASe,MACrCI,UAAWG,IACT,iBACA,CAAE,WAAYlB,IAAcJ,EAASe,MALzC,iCAWA,wBACEK,KAAK,SACLC,QAAS,kBAAMhB,EAAaL,EAASc,SACrCK,UAAWG,IACT,oBACA,CAAE,WAAYlB,IAAcJ,EAASc,SALzC,4BAWA,wBACEM,KAAK,SACLC,QAAS,WACPd,GAAcD,IAEhBa,UAAWG,IAAG,oBAAqB,CAAE,YAAahB,IALpD,sBAUEF,GAAaE,IACb,wBACEc,KAAK,SACLC,QA3Ce,WACvBhB,EAAa,IACbE,GAAa,IA0CLY,UAAWG,IAAG,mBAAoB,CAAE,WAAYlB,IAHlD,sBAUJ,6BACE,6BACGI,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC5GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.92dcde68.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  abc = 'alphabetically',\n  length = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortField: string,\n  isReversed: boolean,\n) {\n  const praparedGoods = [...goods];\n\n  if (sortField) {\n    praparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.length:\n          return good1.length - good2.length;\n\n        case SortType.abc:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    praparedGoods.reverse();\n  }\n\n  return praparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, isReversed);\n\n  const handleResetClick = () => {\n    setSortField('');\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.abc)}\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== SortType.abc },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.length)}\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== SortType.length },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsReverse(!isReversed);\n          }}\n          className={cn('button is-warning', { 'is-light': !isReversed })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            onClick={handleResetClick}\n            className={cn('button is-danger', { 'is-light': sortField })}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}